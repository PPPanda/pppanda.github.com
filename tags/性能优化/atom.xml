<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 性能优化 | 屁熊猫的实验室]]></title>
  <link href="http://PPPanda.github.com/tags/性能优化/atom.xml" rel="self"/>
  <link href="http://PPPanda.github.com/"/>
  <updated>2012-12-17T23:36:12+08:00</updated>
  <id>http://PPPanda.github.com/</id>
  <author>
    <name><![CDATA[PPanda]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[performance]]></title>
    <link href="http://PPPanda.github.com/article/performance.html"/>
    <updated>2012-12-17T14:38:00+08:00</updated>
    <id>http://PPPanda.github.com/article/performance</id>
    <content type="html"><![CDATA[<h2>js的载入</h2>

<p>当浏览器从服务器接收到了HTML文档，并把HTML在内存中转换成DOM树，在转换的过程中如果发现某个节点(node)上引用了CSS或者IMAGE，就会再发1个request去请求CSS或image,然后继续执行下面的转换，而不需要等待request的返回，当request返回后，只需要把返回的内容放入到DOM树中对应的位置就OK。但当引用了JS的时候，浏览器发送1个js request就会一直等待该request的返回。因为浏览器需要1个稳定的DOM树结构，而JS中很有可能有代码直接改变了DOM树结构，比如使用document.write 或 appendChild,甚至是直接使用的location.href进行跳转，浏览器为了防止出现JS修改DOM树，需要重新构建DOM树的情况，所以就会阻塞其他的下载和呈现.</p>

<p>因为浏览器会维持html中css和js的顺序，样式表必须在嵌入的JS执行前先加载、解析完。而嵌入的JS会阻塞后面的资源加载，所以就会出现上面CSS阻塞下载的情况。</p>

<p>js放在样式前和样式后？</p>

<p>放在底部，虽然放在底部照样会阻塞所有呈现，但不会阻塞资源下载</p>
]]></content>
  </entry>
  
</feed>
